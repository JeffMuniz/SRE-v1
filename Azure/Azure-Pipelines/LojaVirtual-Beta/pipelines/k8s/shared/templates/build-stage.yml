parameters:
  - name: Stage
    type: string

  - name: StageDisplayName
    type: string

  - name: DependsOn
    type: object
    default: null

  - name: AppName
    type: string

  - name: DockerfilePath
    type: string

  - name: ImageRepository
    type: string

  - name: ImageTag
    type: string

  - name: DockerRegistryServiceConnection
    type: string

  - name: VmImage
    type: string

stages:
- stage: ${{ parameters.Stage }}
  displayName: ${{ parameters.StageDisplayName }}
  ${{ if parameters.DependsOn }}:
    dependsOn: '${{ parameters.DependsOn }}'
  jobs:
  - job: Build
    displayName: ${{ parameters.StageDisplayName }}
    pool:
      vmImage: ${{ parameters.VmImage }}
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        buildContext: .
        dockerfile: ${{ parameters.DockerfilePath }}
        containerRegistry: ${{ parameters.DockerRegistryServiceConnection }}
        repository: ${{ parameters.ImageRepository }}
        tags: |
          ${{ parameters.ImageTag }}

    - task: CopyFiles@2
      displayName: Copy shared manifests
      inputs:
        sourceFolder: $(Build.SourcesDirectory)/pipelines/k8s/shared/manifests
        contents: |
          **/?(*.yml|*.yaml)
        targetFolder: '$(Build.ArtifactStagingDirectory)/pipelines/k8s/manifests/shared'

    - task: CopyFiles@2
      displayName: Copy app manifests
      inputs:
        sourceFolder: $(Build.SourcesDirectory)/pipelines/k8s/${{ parameters.AppName }}/manifests
        contents: |
          **/?(*.yml|*.yaml)
        targetFolder: '$(Build.ArtifactStagingDirectory)/pipelines/k8s/manifests/${{ parameters.AppName }}'

    - task: PublishPipelineArtifact@1
      displayName: Publish artifacts
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/pipelines/k8s/manifests'
        artifactName: 'manifests'
